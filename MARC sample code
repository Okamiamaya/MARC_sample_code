#include<MatrixMiniR4.h>

//Adjustment variables
int left_speed=90, right_speed=-100;//Speed of the DC motor
int open_angle=50, close_angle=155;//Angle of the claw
int upper_angle=180, center_angle=40, bottom_angle=25;//Height position angle of the robotic arm
int shovel_up=60, shovel_autonomic=135, shovel_down=180;//Height position angle of the shovel

//Function bases
//Initializing function
void MiniR4_Servo_motor_initialize(){//Initializing robot
  MiniR4.RC1.setAngle(open_angle);//Claw
  MiniR4.RC2.setAngle(center_angle);//Robotic arm
  MiniR4.RC3.setAngle(shovel_autonomic);//Unknown default
  MiniR4.RC4.setAngle(180-shovel_autonomic);//Unknown default
}

//Autonomic mode functions
void MiniR4_DC_motor_brake_b(bool a){//Braking robot
  MiniR4.M3.setBrake(a);
  MiniR4.M4.setBrake(a);
}
//'sec' means the continuing time
void MiniR4_DC_motor_forward_n(double sec){//Robot moving forward
  MiniR4.M3.setPower(left_speed);
  MiniR4.M4.setPower(right_speed);
  delay(sec);
}
void MiniR4_DC_motor_back_n(double sec){//Robot moving backward
  MiniR4.M3.setPower(left_speed*-1);
  MiniR4.M4.setPower(right_speed*-1);
  delay(sec);
}
void MiniR4_DC_motor_left_n(double sec){//Robot turning left
  MiniR4.M3.setPower(left_speed*-1);
  MiniR4.M4.setPower(right_speed);
  delay(sec);
}
void MiniR4_DC_motor_right_n(double sec){//Robot turning right
  MiniR4.M3.setPower(left_speed);
  MiniR4.M4.setPower(right_speed*-1);
  delay(sec);
}
void MiniR4_Servo_motor_gain(){//Grabbing blocks on the stand
  MiniR4.RC1.setAngle(close_angle);
  delay(700);
}
void MiniR4_Servo_motor_place(){//Placing blocks on the platform
  MiniR4.RC2.setAngle(upper_angle);
  delay(900);
  MiniR4.RC1.setAngle(open_angle);
  delay(500);
  MiniR4.RC2.setAngle(center_angle);
  delay(500);
}

//Main robot system
void setup() {
  MiniR4.begin();//Initializing MiniR4
  Serial.begin(9600);//Initializing serial communication, baud rate 9600
  MiniR4.PWR.setBattCell(2);//Setting the number of battery cells
  MiniR4_DC_motor_brake_b(true);
  MiniR4_Servo_motor_initialize();
}

void loop() {
  MiniR4.PS2.read_gamepad(false, 0);//Gaining joystick's signal

  //Autonomic left mode(Discuss the strategy with the campanion before the competition)
  if(MiniR4.PS2.Button(PSB_TRIANGLE)){
    //Gaining block at the center
    MiniR4_DC_motor_forward_n(280);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_gain();
    //Placing block on the platform
    MiniR4_DC_motor_back_n(240);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_place();
    //Gaining block at the left
    MiniR4_DC_motor_forward_n(150);
    MiniR4_DC_motor_left_n(260);
    MiniR4_DC_motor_forward_n(1010);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_gain();
    //Placing block on the platfom
    MiniR4_DC_motor_right_n(200);
    MiniR4_DC_motor_back_n(700);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_place();
  }

  //Autonomic right mode(Discuss the strategy with the campanion before the competition)
  if(MiniR4.PS2.Button(PSB_CROSS)){
    //Gaining block at the center
    MiniR4_DC_motor_forward_n(275);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_gain();
    //Placing block on the platform
    MiniR4_DC_motor_back_n(240);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_place();
    //Gaining block at the right
    MiniR4_DC_motor_forward_n(100);
    MiniR4_DC_motor_right_n(280);
    MiniR4_DC_motor_forward_n(1010);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_gain();
    //Placing block on the platfom
    MiniR4_DC_motor_left_n(160);
    MiniR4_DC_motor_back_n(700);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_place();
  }

  //Manual mode
  //Moving robot by controlling the two-axis stick module on the left and the right
  MiniR4.M3.setPower((map(MiniR4.PS2.Analog(PSS_RX), 0, 255, (-100), 100) - map(MiniR4.PS2.Analog(PSS_LY), 0, 255, (-100), 100)));
  MiniR4.M4.setPower((map(MiniR4.PS2.Analog(PSS_RX), 0, 255, (-100), 100) + map(MiniR4.PS2.Analog(PSS_LY), 0, 255, (-100), 100)));
  /*
  On the left two-axis stick module, pushing the y-axis can controll the robot moves forward or backward
  On the right two-axis stick module, pushing the x-axis can controll the robot turns left or right
  */
  //Claws controlling
  if(MiniR4.PS2.Button(PSB_L1)) MiniR4.RC1.setAngle(open_angle);//Press button L1 can open the claw
  if(MiniR4.PS2.Button(PSB_L2)) MiniR4.RC1.setAngle(close_angle);//Press button L2 can close the claw
  //Robotic arm's height position controlling
  if(MiniR4.PS2.Button(PSB_PAD_UP)) MiniR4.RC2.setAngle(upper_angle);//Press the up arrow button can move the robotic arm to the highest position(Avoiding bumping into barriers)
  if(MiniR4.PS2.Button(PSB_PAD_LEFT)) MiniR4.RC2.setAngle(center_angle);//Press the left arrow button can move the robotic arm to the center position(Capturing the blocks on the stand)
  if(MiniR4.PS2.Button(PSB_PAD_DOWN)) MiniR4.RC2.setAngle(bottom_angle);//Press the down arrow button can move the robotic arm to the lowest position(Capturing the blocks on the ground)
  if(MiniR4.PS2.Button(PSB_R1)){//Press button R1 can ascent the shovel
    MiniR4.RC3.setAngle(shovel_up);
    MiniR4.RC4.setAngle(180-shovel_up);
  }
  if(MiniR4.PS2.Button(PSB_R2)){//Press button R2 can lower the shovel
    MiniR4.RC3.setAngle(shovel_down);
    MiniR4.RC4.setAngle(180-shovel_down);
  }
  if(MiniR4.PS2.Button(PSB_CIRCLE)){//Press button R2 can lower the shovel
    MiniR4.RC3.setAngle(shovel_autonomic);
    MiniR4.RC4.setAngle(180-shovel_autonomic);
  }
}
