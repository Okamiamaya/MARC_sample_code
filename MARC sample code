#include<MatrixMiniR4.h>

//Adjustment variables
int left_speed=95, right_speed=-100;//Speed of the DC motor
int open_angle=80, close_angle=0;//Angle of the claw
int upper_angle=130, center_angle=75, bottom_angle=55;//Height position angle of the robotic arm

//Function bases
//Initializing function
void MiniR4_Servo_motor_initialize(){//Initializing robot
  MiniR4.RC1.setAngle(open_angle);//Claw
  MiniR4.RC2.setAngle(upper_angle);//Robotic arm
  MiniR4.RC3.setAngle(0);//Unknown default
  MiniR4.RC4.setAngle(0);//Unknown default
}

//Autonomic mode functions
void MiniR4_DC_motor_brake_b(bool a){//Braking robot
  MiniR4.M3.setBrake(a);
  MiniR4.M4.setBrake(a);
}
//'sec' means the continuing time
void MiniR4_DC_motor_forward_n(double sec){//Robot moving forward
  MiniR4.M3.setPower(left_speed);
  MiniR4.M4.setPower(right_speed);
  delay(sec);
}
void MiniR4_DC_motor_back_n(double sec){//Robot moving backward
  MiniR4.M3.setPower(left_speed*-1);
  MiniR4.M4.setPower(right_speed*-1);
  delay(sec);
}
void MiniR4_DC_motor_left_n(double sec){//Robot turning left
  MiniR4.M3.setPower(left_speed*-1);
  MiniR4.M4.setPower(right_speed);
  delay(sec);
}
void MiniR4_DC_motor_right_n(double sec){//Robot turning right
  MiniR4.M3.setPower(left_speed);
  MiniR4.M4.setPower(right_speed*-1);
  delay(sec);
}
void MiniR4_Servo_motor_gain(){//Grabbing blocks on the stand
  MiniR4.RC2.setAngle(center_angle);
  MiniR4.RC1.setAngle(close_angle);
  MiniR4.RC2.setAngle(upper_angle);
}
void MiniR4_Servo_motor_place(){//Placing blocks on the platform
  MiniR4.RC2.setAngle(center_angle);
  MiniR4.RC1.setAngle(open_angle);
  MiniR4.RC2.setAngle(upper_angle);
}

//Main robot system
void setup() {
  MiniR4.begin();//Initializing MiniR4
  Serial.begin(9600);//Initializing serial communication, baud rate 9600
  MiniR4.PWR.setBattCell(2);//Setting the number of battery cells
  MiniR4_DC_motor_brake_b(true);
  MiniR4_Servo_motor_initialize();
}

void loop() {
  MiniR4.PS2.read_gamepad(false, 0);//Gaining joystick's signal

  //Autonomic mode
  if(MiniR4.PS2.Button(PSB_TRIANGLE)){
    //Gaining block at the center
    MiniR4_DC_motor_forward_n(350);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_gain();
    //Placing block on the platform
    MiniR4_DC_motor_back_n(50);
    MiniR4_DC_motor_left_n(500);
    MiniR4_DC_motor_forward_n(50);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_place();
    //Gaining block at the left/right(Discuss the strategy with the campanion before the competition)
    MiniR4_DC_motor_back_n(70);
    MiniR4_DC_motor_right_n(210);//Left_mode
    //MiniR4_DC_motor_left_n(230);//Right_mode
    MiniR4_DC_motor_forward_n(750);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_gain();
    //Placing block on the platfom(Discuss the strategy with the campanion before the competition)
    MiniR4_DC_motor_left_n(350);//Left
    //MiniR4_DC_motor_right_n(290);//Right_mode
    MiniR4_DC_motor_forward_n(400);
    MiniR4_DC_motor_brake_b(true);
    MiniR4_Servo_motor_place();
  }

  //Manual mode
  //Moving robot by controlling the two-axis stick module on the left and the right
  MiniR4.M3.setPower((map(MiniR4.PS2.Analog(PSS_RX), 0, 255, (-100), 100) - map(MiniR4.PS2.Analog(PSS_LY), 0, 255, (-100), 100)));
  MiniR4.M4.setPower((map(MiniR4.PS2.Analog(PSS_RX), 0, 255, (-100), 100) + map(MiniR4.PS2.Analog(PSS_LY), 0, 255, (-100), 100)));
  /*
  On the left two-axis stick module, pushing the y-axis can controll the robot moves forward or backward
  On the right two-axis stick module, pushing the x-axis can controll the robot turns left or right
  */
  //Claws controlling
  if(MiniR4.PS2.Button(PSB_L1)) MiniR4.RC1.setAngle(open_angle);//Press button L1 can open the claw
  if(MiniR4.PS2.Button(PSB_L2)) MiniR4.RC1.setAngle(close_angle);//Press button L2 can close the claw
  //Robotic arm's height position controlling
  if(MiniR4.PS2.Button(PSB_PAD_UP)) MiniR4.RC2.setAngle(upper_angle);//Press the up arrow button can move the robotic arm to the highest position(Avoiding bumping into barriers)
  if(MiniR4.PS2.Button(PSB_PAD_LEFT)) MiniR4.RC2.setAngle(center_angle);//Press the left arrow button can move the robotic arm to the center position(Capturing the blocks on the stand)
  if(MiniR4.PS2.Button(PSB_PAD_DOWN)) MiniR4.RC2.setAngle(bottom_angle);//Press the down arrow button can move the robotic arm to the lowest position(Capturing the blocks on the ground)
}
